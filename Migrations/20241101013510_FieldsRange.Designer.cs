// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using refund.ContextDir;

#nullable disable

namespace refund.Migrations
{
    [DbContext(typeof(DbContextPlayer))]
    [Migration("20241101013510_FieldsRange")]
    partial class FieldsRange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("refund.DTOs.AddressDto", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAddress"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAddress");

                    b.ToTable("AddressDto");
                });

            modelBuilder.Entity("refund.DTOs.SpousesDto", b =>
                {
                    b.Property<int>("SpouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpouseId"));

                    b.Property<int>("SpouseAge")
                        .HasColumnType("int");

                    b.Property<string>("SpouseDob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpouseGrossIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpouseIncomeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpouseSelfEmploymentComp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpouseSsn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpouseWagesFederal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpouseYtdFederal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpouseYtdIncome")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SpouseId");

                    b.ToTable("SpousesDto");
                });

            modelBuilder.Entity("refund.Models.Address", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAddress"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxplayerId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAddress");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.HasIndex("TaxplayerId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("refund.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("refund.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<decimal?>("AdditionalChildTaxCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildTaxCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EarnedIncomeTaxCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstimatedTaxDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FederalTaxWithheld")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FilingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrimaryGrossIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrimaryIncomeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrimarySelfEmploymentComp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrimaryWagesFederal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrimaryYtdFederal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrimaryYtdIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SelfEmploymentTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SpousesSpouseId")
                        .HasColumnType("int");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("StandardDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StreetAddressIdAddress")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxableIncome")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClientId");

                    b.HasIndex("SpousesSpouseId");

                    b.HasIndex("StreetAddressIdAddress");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("refund.Models.Dependents", b =>
                {
                    b.Property<int>("DependentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DependentsId"));

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datebirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaxplayerId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("DependentsId");

                    b.HasIndex("TaxplayerId");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("refund.Models.FilingStatus", b =>
                {
                    b.Property<int>("IdFilingStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilingStatus"));

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFilingStatus");

                    b.ToTable("FilingStatus");
                });

            modelBuilder.Entity("refund.Models.IncomeType", b =>
                {
                    b.Property<int>("IncometypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncometypeId"));

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nameincometype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncometypeId");

                    b.ToTable("IncomeType");
                });

            modelBuilder.Entity("refund.Models.Spouse", b =>
                {
                    b.Property<int>("SpouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpouseId"));

                    b.Property<int>("IncometypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SpouseDatebirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpouseEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SpouseGrossIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpouseLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpousePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SpouseSelfEmploymentComp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpouseSocialSecurity")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal?>("SpouseWagesFederal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SpouseYtdFederal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SpouseYtdIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaxplayerId")
                        .HasColumnType("int");

                    b.HasKey("SpouseId");

                    b.HasIndex("IncometypeId");

                    b.HasIndex("TaxplayerId")
                        .IsUnique();

                    b.ToTable("Spouse");
                });

            modelBuilder.Entity("refund.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Range_End")
                        .HasColumnType("bigint");

                    b.Property<long>("Range_Start")
                        .HasColumnType("bigint");

                    b.HasKey("StateId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("refund.Models.TaxPlayer", b =>
                {
                    b.Property<int>("TaxplayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxplayerId"));

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datebirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FederalIncomeTaxWithheld")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FilingStatusIdFilingStatus")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFilingStatus")
                        .HasColumnType("int");

                    b.Property<int>("IncometypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SelfEmploymentCompensation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SocialSecurity")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("TaxPreparerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("WagesIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("YTDEarnings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("YTDFederalWithholding")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TaxplayerId");

                    b.HasIndex("FilingStatusIdFilingStatus");

                    b.HasIndex("IncometypeId");

                    b.HasIndex("TaxPreparerId");

                    b.ToTable("TaxPlayer");
                });

            modelBuilder.Entity("refund.Models.TaxPreparer", b =>
                {
                    b.Property<int>("TaxPreparerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxPreparerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Messages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaxPreparerId");

                    b.ToTable("TaxPreparer");
                });

            modelBuilder.Entity("refund.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastlogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("refund.Models.Address", b =>
                {
                    b.HasOne("refund.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("refund.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("refund.Models.TaxPlayer", "TaxPlayer")
                        .WithOne("Address")
                        .HasForeignKey("refund.Models.Address", "TaxplayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("State");

                    b.Navigation("TaxPlayer");
                });

            modelBuilder.Entity("refund.Models.City", b =>
                {
                    b.HasOne("refund.Models.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("refund.Models.Client", b =>
                {
                    b.HasOne("refund.DTOs.SpousesDto", "Spouses")
                        .WithMany()
                        .HasForeignKey("SpousesSpouseId");

                    b.HasOne("refund.DTOs.AddressDto", "StreetAddress")
                        .WithMany()
                        .HasForeignKey("StreetAddressIdAddress");

                    b.Navigation("Spouses");

                    b.Navigation("StreetAddress");
                });

            modelBuilder.Entity("refund.Models.Dependents", b =>
                {
                    b.HasOne("refund.Models.TaxPlayer", "TaxPlayer")
                        .WithMany("Dependents")
                        .HasForeignKey("TaxplayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxPlayer");
                });

            modelBuilder.Entity("refund.Models.Spouse", b =>
                {
                    b.HasOne("refund.Models.IncomeType", "IncomeType")
                        .WithMany()
                        .HasForeignKey("IncometypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refund.Models.TaxPlayer", "TaxPlayer")
                        .WithOne("Spouse")
                        .HasForeignKey("refund.Models.Spouse", "TaxplayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IncomeType");

                    b.Navigation("TaxPlayer");
                });

            modelBuilder.Entity("refund.Models.TaxPlayer", b =>
                {
                    b.HasOne("refund.Models.FilingStatus", "FilingStatus")
                        .WithMany("TaxPlayer")
                        .HasForeignKey("FilingStatusIdFilingStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refund.Models.IncomeType", "IncomeType")
                        .WithMany()
                        .HasForeignKey("IncometypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refund.Models.TaxPreparer", "TaxPreparer")
                        .WithMany("TaxPlayers")
                        .HasForeignKey("TaxPreparerId");

                    b.Navigation("FilingStatus");

                    b.Navigation("IncomeType");

                    b.Navigation("TaxPreparer");
                });

            modelBuilder.Entity("refund.Models.FilingStatus", b =>
                {
                    b.Navigation("TaxPlayer");
                });

            modelBuilder.Entity("refund.Models.State", b =>
                {
                    b.Navigation("City");
                });

            modelBuilder.Entity("refund.Models.TaxPlayer", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Dependents");

                    b.Navigation("Spouse");
                });

            modelBuilder.Entity("refund.Models.TaxPreparer", b =>
                {
                    b.Navigation("TaxPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
